%% run_proposed_step3.m

% Compute coarse object depths and filtering noise photons
% by solving a sparse deconvolution problem based on OMP 
fprintf(' Testing Step 3 : Depth estimation\n');

%
estimate_range = linspace(T_min,T_max,n);
D_filt = zeros(nr,nc);
T_filt = cell(nr,nc);
for i=1:nr
    for j=1:nc
        % valid ones
        
        dats_temp = T{i,j};
        dats_temp(dats_temp<T_min) = [];
        dats_temp(dats_temp>T_max) = [];
        T_filt{i,j} = dats_temp;

        dats = dats_temp;
        
        if(~isempty(dats)) % some photons are left
            vals = mean(dats);
            D_filt(i,j) = vals;
        end
    end
end
D_filt_orig = D_filt;

%
Y = D_filt;
Y(isnan(Y)) = 0; % 0 == no data
AT = @(x) x; A = @(x) x;

tau_D = 4.3;
D_map = SPIRALTAP_blank(Y,A,tau_D, ...
    'noisetype','gaussian', ...
    'penalty','tv', ...    
    'Initialization',D_filt,...
    'AT',AT,...
    'monotone',1,...
    'miniter',1,...
    'maxiter',8,...
    'stopcriterion',3,...
    'tolerance',1e-12,...
    'alphainit',1e-2,...
    'alphaaccept',1e80,...
    'logepsilon',1e-10,...
    'saveobjective',1,...
    'savereconerror',1,...
    'savecputime',1,...
    'savesolutionpath',0,...
    'truth',zeros(nr,nc),...
    'verbose',0);
